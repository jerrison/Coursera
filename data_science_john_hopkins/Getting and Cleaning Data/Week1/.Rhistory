hgfhgfghfghfghfghfhghfghfghfhgfghfy;''
''
chicago <- readRDS("chicago.rds")
chicago <- arrange(chicago , desc(date))
head(chicago)
chicago <- rename(chicago , dewpoint = dptp, pm25 = pm25tmean2)
head(chicago[, 1:5, 3])
chicago <- mutate(chicago, pm25detrend = pm25 - mean(pm25, na.rm = TRUE))
head(chicago)
chicago <- mutate(chicago = year = as.POSIXlt(date)$year + 1900)
chicago <- mutate(chicago , year = as.POSIXlt(date)$year + 1900)
years <- group_by(chicago, year)
years
summarize(years, pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
qq <- quantile(chicago$pm25, seq(0,1,0.2), na.rm = TRUE)
?quantile
chicago <- mutate(chicago, pm25.quint = cut(pm25, qq))
head(chicago)
chicago <- readRDS("chicago.rds")
chicago <- rename(chicago, dewpoint = dptp, pm25 = pm25tmean2)
library(dplyr)
library(dplyr)
chicago <- rename(chicago, dewpoint = dptp, pm25 = pm25tmean2)
chicago <- mutate(chicago, pm25detrend = pm25 - mean(pm25, na.rm = TRUE))
chicago <- mutate(chicago, year = as.POSIXlt(date)$year + 1900)
head(chicago)
chicago <- arrange(chicago, desc(date))
chicago
head(chicago)
chicago2 <- mutate(chicago, year2 = as.POSIXlt(date)$year)
chicago2 <- mutate(chicago, year2 = as.POSIXlt(date)$year)
chicago2 <- mutate(chicago, year2 = as.POSIXlt(date)$year + 1)
years <- group_by(chicago, year)
head(years)
qq <- quantile(chicago$pm25, seq(0,1,0,2), na.rm = TRUE)
qq <- quantile(chicago$pm25, seq(0,1,0.2), na.rm = TRUE)
chicago <- mutate(chicago, pm25.quint = cut(pm25, qq))
head(chicago)
?cut
qq
max(chicago$pm25)
?max
max(chicago$pm25, na.rm = TRUE)
min(chicago$pm25, na.rm = TRUE)
summarize(quint, o3 = mean(o3tmean2, na.rm = TRUE),
no2 = mean(no2tmean2, na.rm = TRUE))
quint <- group_by(chicago, pm25.quint   )
summarize(quint, o3 = mean(o3tmean2, na.rm = TRUE),
no2 = mean(no2tmean2, na.rm = TRUE))
mutate(chicago, pm25.quint = cut(pm25,qq)) %>%
group_by(pm25.quint) %>%
summarize(o3 = mean(o3tmean2, na.rm = TRUE),
no2 = mean(no2tmean2, na.rm = TRUE))
mutate(chicago, month = as.POSIXlt(date)$mon + 1)
head(mutate(chicago, month = as.POSIXlt(date)$mon + 1))
head(mutate(chicago, month = as.POSIXlt(date)$mon))
tail(mutate(chicago, month = as.POSIXlt(date)$mon))
mutate(chicago, month = as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
summmarize(pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
mutate(chicago, month = as.POSIXlt(date)$mon + 1) %>%
summarize(pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
mutate(chicago, month = as.POSIXlt(date)$mon + 1) %>%
group_by(month) %>%
summarize(pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
x <- runif(1, 0 ,10)
str(x)
head(x)
if(x>3) {
y <- 10
} else {
Y <- 0
}
y
for(i in 1:10) {
print(i)
}
x <- c("a", "b", "c", "d")
for(i in 1:4) {
print(x[i])
}
?seq_along
seq_along(x)
x
lenght(x)
length(x)
for(i in seq_along(x)) {
print(x[i])
}
for(i in x) {
print(i)
}
for(i in x) print(x[i])
for(i in x) print(i)
x <- matrix(1:6, 2, 3)
x
head(x)
for(i in seq_len(nrow(x))){
for(j in seq_len(ncol(x))) {
print(x[i,j])
}
}
?seq_len
seq_len(3)
seq_len(10)
count <- 0
while(count < 10) {
print(count)
count <- count + 1
}
?set.seed
z <- 5
set.seed(1)
while(z >= 3 && z <= 10) {
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
print(z)
?cat
f <- function() {
cat("Hello, world!\n")
}
f()
f <- function(num) {
for(i in seq_len(num)) {
cat("Hello, world!/n")
}
}
f(3)
f <- function(num) {
hello <- "Hello, world!\n"
for(i in seq_len(num)) {
cat(hello)
}
chars <- nchar(hello)*num
chars
)
f <- function(num) {
hello <- "Hello, world!\n"
for(i in seq_len(num)) {
cat(hello)
}
chars <- nchar(hello)*num
chars
}
meaningoflife <- f(3)
print(meaningoflife)
meaningoflife
?nchar
formals(f)
str(rnorm)
mydata <- rnorm(100, 2, 1)
f <- function(a, b) {
a^2
}
f(2)
f(2, 4)
?plot
myplot <- function(x, y, type = "l", ...) {
plot(x, y, type = type, ... )
}
mean
search()
f <- function(x, y) {
x^2 + y / z
}
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(3)
square(3)
cube
ls(environment(cube))
get("n", environment(cube))
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
make.NegLogLik <- function(data, fixed = c(FALSE, FALSE)) {
params <- fixed
function(p) {
}
}
ls()
source("learn_temp1.R")
ls()
str(make.NegLogLik)
set.seed(1)
normals <- rnorm(100, 1, 2)
nLL <- make.NegLogLik(normals)
nLL
ls(environment(nLL))
optim(c(mu = 0, sigma =1), nLL)$par
nLL <- make.NegLogLik(normals, c(FALSE,2))
optimize(nLL, c(-1,3))$minimum
nLL <- make.NegLogLik(normals, c(1, FALSE))
optimize(nLL, c(1e-6, 10))$minimum
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
dir()
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
dim(andy)
str(andy)
summary(andy)
names(andy)
andy[1, "Weight"]
?which
andy[which(andy$Day ==30), "Weight"]
andy[which(andy[,"Day"] == 30), "Weight"]
subset(andy$Weight, andy$Day == 30)
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_start
andy_end
andy_loss <- andy_start - andy_end
andy_loss
files <- list.files("diet_data")
files
files[1]
files[3:5]
head(read.csv(files[3]))
files
head(read.csv(files[3]))
files.full <- list.files("diet_data", full.names = TRUE)
files_full
files.full
files_full <- list.files("diet_data", full.names = TRUE)
head(read.csv(files_full[3]))
andy_david <- rbind(andy, read.csv(files_full[2]))
head(andy_david)
tail(andy_david)
day_25 <- andy_david[which(andy_david$Day == 25),]
day_25
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
median(dat$Weight)
dat
median(dat$Weight, na.rm = TRUE)
dat_30 <- dat[which(dat[, "Day"] == 30),]
dat_30
median(dat_30$Weight)
source("learn_temp1.R")
weightmedian(directory = "diet_data", day = 20)
weightmedian("diet_data/", 4)
weightmedian("diet_data", 4)
lapply
x <- list(a = 1:5, b = rnorm(10))
x
lapply(x, mean)
lapply(x, mean())
str(runif)
x <- 1:4
lapply(x, runif)
lapply(x, runif, min = 0, max = 10)
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
lapply(x, function(elt) {elt[,1]})
x
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100, 5))
?rnorm
str(rnorm)
lapply(x, mean)
y <- sapply(x, mean)
y]
y
install.packages("MASS")
head(Boston)
library("MASS")
head(Boston)
library(ISLR)
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
?which
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R', echo=TRUE)
college[which(college$Top25perc == 100), 2]
fix(college)
college[which(college$Top25perc == 100), 0]
college[which(college$Top25perc == 100), row.names]
college[which(college$Top25perc == 100), row.names()]
college[which(college$Top25perc == 100)]
[which(college$Top25perc == 100)]
which(college$Top25perc == 100)
head(college)
row.names(college)
row.names(college)[1]
row.names(college)[college[which(college$Top25perc == 100), 1]]
row.names(college)[which(college$Top25perc == 100)]
fix(college)
head(college)
college[,1]
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R', echo=TRUE)
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
rownames(college)
college <- College
college[,1]
head(college)
fix(college)
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
summary(college)
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
?pairs
?plot
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
hist(college$perc.alumni)
hist(college$perc.alumni, col = 2)
hist(college$S.F.Ratio, col = 3)
hist(college$S.F.Ratio, col = 3, breaks = 10)
hist(college$S.F.Ratio, col = 3, breaks = 100)
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
par(mfro <- c(2,2))
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
par(mfro <- c(2,2))
hist(college$Apps)
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
par(mfrow <- c(2,2))
hist(college$Apps)
hist(college$perc.alumni, col = 2)
?par
par(mfrow <- c(2,2))
head(Auto)
dim(Auto)
dim(na.omit(Auto))
na.omit(Auto)
complete.cases(Auto)
na.omit(Auto)
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
summary(Auto)
fix(Auto)
fix(Auto)
names(Auto)
dim(Auto)
range(Auto$mpg)
str(Auto)
range(Auto[, 1:9])
range(Auto)
seq_along(names(Auto))
seq_along(names(Auto)-2)
seq_along(names(Auto))-2
range(Auto$name)
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
?print
?sep
?cat
names(Auto)
names(Auto)[1]
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
source('H:/Documents/GitHub/ContinuingEducation/DataScience/An Introduction to Statistical Learning/Chapter2/Applied.R')
getwd()
source('~/.active-rstudio-document')
if (!file.exists("data")) {
dir.create("data")
}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accesType=DOWNLOAD"
download.file(fileUrl, destfile = "cameras.csv", method = "curl")
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "cameras.csv", method = "curl")
?dir.create
unlink("data")
library(XML)
install.packages(XML)
install.packages("XML")
library(XML)
source('~/.active-rstudio-document')
names(rootNode)
head(rootNode)
xmlSApply(rootNode, xmlValue)
source('~/.active-rstudio-document')
xpathSApply(rootNode, "//name", xmlValue)
xpathSApply(rootNode, "//price", xmlValue)
library(jsonlite)
source('~/.active-rstudio-document')
names(jsonData)
names(jsonData$owner)
jsonData$owner$login
myjson <- toJSON(iris, pretty = TRUE)
cat(myjson)
cat
str(cat)
?cat
library(data.table)
install.packages("data.table")
library(data.table)
library(data.table)
source('~/.active-rstudio-document')
head(DF, 3)
source('~/.active-rstudio-document')
head(DF, 3)
head(DF, 3)
head(output1, 3)
output1
source('~/.active-rstudio-document')
tables()
head(DT, 3)
tables*()
tables()
tables
table
table()
tables()
source('~/.active-rstudio-document')
tales()
tables()
DT[2,]
which(DT$y == "a")
DT[which(DT$y == "a"),]
DT[DT$y == "a",]
swirl()
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
path2csv
mydf <- read.csv("path2csv", stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
swirl()
setwd("..")
setwd("GitHub/Coursera/")
dir()
dir.create("Getting and Cleaning Data")
setwd("Getting and Cleaning Data/")
?read.file
?read
?file.read
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
fileUrl
download.file(url = fileUrl, destfile = properties.csv, method = "curl")
download.file(url = fileUrl, destfile = "properties.csv", method = "curl")
download.file(url = fileUrl, destfile = "properties.csv")
dir.create("Week1")
setwd("Week1/")
source('~/.active-rstudio-document')
library(dplyr)
?dplyr
browseVignettes(package = "dplyr")
browseVignettes(package = "dplyr")
properties1 <- read.table("properties.csv")
fix(properties1)
properties1 <- read.csv("properties.csv")
fix(properties1)
?tbl_df
?read.csv
properties1 <- read.csv("properties.csv", header = TRUE)
fix(properties1)
properties1 <- tbl_df(properties1)
properties1
filter(properties1, VAL >= 1000000)
fix(properties1)
filter(properties1, VAL >= 14)
ValBigThan100K <- filter(properties1, VAL >= 14)
dim(validObject())
dim(ValBigThan100K)
head(ValBigThan100K)
str(ValBigThan100K)
summary(ValBigThan100K)
ValBigThan1M <- filter(properties1, VAL >= 24)
dim(ValBigThan1M)
source('H:/Documents/GitHub/Coursera/Getting and Cleaning Data/Week1/Quiz1Script.R')
\
fix(properties)
